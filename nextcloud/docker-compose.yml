version: '3'

services:
  db:
    image: mariadb:${DB_TAG}
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - db:/var/lib/mysql
    secrets:
      - mysql_root_passwd
      - mysql_nc_db
      - mysql_nc_user
      - mysql_nc_user_passwd
    environment:
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/mysql_root_passwd
      - MYSQL_DATABASE_FILE=/run/secrets/mysql_nc_db
      - MYSQL_USER_FILE=/run/secrets/mysql_nc_user
      - MYSQL_PASSWORD_FILE=/run/secrets/mysql_nc_user_passwd
    networks:
      - nc-tier

  redis:
    image: redis:${REDIS_TAG}
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
    secrets:
      - redis_passwd
    command: ash -c "redis-server --requirepass $$( cat /run/secrets/redis_passwd)"
    networks:
      - nc-tier

  app:
    build: 
      context: ./nextcloud
      dockerfile: Dockerfile
      args:
        TAG: ${NEXTCLOUD_TAG}
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - nextcloud-web:/var/www/html
      - nextcloud-data:/home/www-data/
      - nextcloud-apps:/var/www/html/custom_apps
    secrets:
      - mysql_nc_db
      - mysql_nc_user
      - mysql_nc_user_passwd
      - nc_root_user
      - nc_root_passwd
      - redis_passwd
    environment:
      # Database
      - MYSQL_PASSWORD_FILE=/run/secrets/mysql_nc_user_passwd
      - MYSQL_DATABASE_FILE=/run/secrets/mysql_nc_db
      - MYSQL_USER_FILE=/run/secrets/mysql_nc_user
      - MYSQL_HOST=db:3306
      # Admin user
      - NEXTCLOUD_ADMIN_USER_FILE=/run/secrets/nc_root_user
      - NEXTCLOUD_ADMIN_PASSWORD_FILE=/run/secrets/nc_root_passwd
      # Nextcloud data directory
      - NEXTCLOUD_DATA_DIR=/home/www-data/
      # Redis
      - REDIS_HOST=redis
      - REDIS_HOST_PASSWORD_FILE=/run/secrets/redis_passwd
      # PHP values
      - PHP_MEMORY_LIMIT=512M
      - PHP_UPLOAD_LIMIT=10G
      - PM_MAX_CHILDREN=100
      - PM_MAX_REQUESTS=0
      # Reverse proxy
      - TRUSTED_PROXIES=web
      - NEXTCLOUD_TRUSTED_DOMAINS=cloud.localhost
    depends_on:
      - db
      - redis
    networks:
      - nc-tier

  cron:
    build: 
      context: ./nextcloud
      dockerfile: Dockerfile
      args:
        TAG: ${NEXTCLOUD_TAG}
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - nextcloud-web:/var/www/html
      - nextcloud-apps:/var/www/html/custom_apps
      - nextcloud-data:/home/www-data/
    entrypoint: /cron.sh
    environment:
      - NEXTCLOUD_DATA_DIR=/home/www-data/
    depends_on:
      - db
      - redis
    networks:
      - nc-tier
  
  web:
    build: 
      context: ./web
      dockerfile: Dockerfile
      args:
        TAG: ${NGINX_TAG}
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - nextcloud-web:/var/www/html:ro
    depends_on:
      - app
    networks:
      - proxy-tier
      - nc-tier

    labels:
      # Explicitly tell traefik to expose this container
      - "traefik.enable=true"

      # Redirect HTTP to HTTPS
      - "traefik.http.routers.nextcloud-redirect.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.nextcloud-redirect.entrypoints=web"
      - "traefik.http.routers.nextcloud-redirect.middlewares=redirect-to-https@file"

      # HTTPS
      # Create a router listening on websecure entrypoint
      - "traefik.http.routers.nextcloud-router.entrypoints=websecure"
      # Enable TLS
      - "traefik.http.routers.nextcloud-router.tls=true"
      # The domains the router will respond to
      - "traefik.http.routers.nextcloud-router.rule=Host(`$NEXTCLOUD_DOMAIN`)"

      # Middlewares
      - "traefik.http.routers.nextcloud-router.middlewares=nextcloud_dav_redirect@file, security-headers@file"
      

volumes:
  db:
  nextcloud-web:
  nextcloud-apps:
  nextcloud-data:

# Use external secrets in production
secrets:
  mysql_root_passwd:
    file: ./secrets/mysql_root_passwd.txt
  mysql_nc_db:
    file: ./secrets/mysql_nc_db.txt
  mysql_nc_user:
    file: ./secrets/mysql_nc_user.txt
  mysql_nc_user_passwd:
    file: ./secrets/mysql_nc_user_passwd.txt
  nc_root_user:
    file: ./secrets/nc_root_user.txt
  nc_root_passwd:
    file: ./secrets/nc_root_passwd.txt
  redis_passwd:
    file: ./secrets/redis_passwd.txt

networks:
  proxy-tier:
    name: ${PROXY_NETWORK}
    external: true
  nc-tier:
    driver: bridge


  